{"Other%20Constants.html#/c:@SCPErrorKeyStripeAPIFailureReason":{"name":"SCPErrorKeyStripeAPIFailureReason","abstract":"<p>If a refund fails, the reason for refund failure if known. Possible values"},"Other%20Constants.html#/c:SCPTerminal.h@SCPSDKVersion":{"name":"SCPSDKVersion","abstract":"<p>The current version of this library.</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPConnectionTokenCompletionBlock":{"name":"SCPConnectionTokenCompletionBlock","abstract":"<p>A block called with a connection token or an error from your backend.</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPErrorCompletionBlock":{"name":"SCPErrorCompletionBlock","abstract":"<p>A block called with an optional error.</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPLogListenerBlock":{"name":"SCPLogListenerBlock","abstract":"<p>A block called with a logline from the SDK.</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPPaymentIntentCompletionBlock":{"name":"SCPPaymentIntentCompletionBlock","abstract":"<p>A block called with a PaymentIntent or an error.</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPPaymentMethodCompletionBlock":{"name":"SCPPaymentMethodCompletionBlock","abstract":"<p>A block called with a PaymentMethod.</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPProcessPaymentCompletionBlock":{"name":"SCPProcessPaymentCompletionBlock","abstract":"<p>A block called with a PaymentIntent or a ProcessPaymentError</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPReaderCompletionBlock":{"name":"SCPReaderCompletionBlock","abstract":"<p>A block called with a reader object or an error.</p>"},"Blocks.html#/c:SCPBlocks.h@T@SCPReaderSoftwareUpdateCompletionBlock":{"name":"SCPReaderSoftwareUpdateCompletionBlock","abstract":"<p>A block called with a ReaderSoftwareUpdate or an error. If there is no update"},"Blocks.html#/c:SCPBlocks.h@T@SCPProcessRefundCompletionBlock":{"name":"SCPProcessRefundCompletionBlock","abstract":"<p>A block called with a Refund or a ProcessRefundError.</p>"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorBusy":{"name":"SCPErrorBusy","abstract":"<p>The SDK is busy executing another command. The SDK can only execute a","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCancelFailedAlreadyCompleted":{"name":"SCPErrorCancelFailedAlreadyCompleted","abstract":"<p>Canceling a command failed because the command already completed.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorNotConnectedToReader":{"name":"SCPErrorNotConnectedToReader","abstract":"<p>No reader is connected. Connect to a reader before trying again.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorAlreadyConnectedToReader":{"name":"SCPErrorAlreadyConnectedToReader","abstract":"<p>Already connected to a reader.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorConnectionTokenProviderCompletedWithNothing":{"name":"SCPErrorConnectionTokenProviderCompletedWithNothing","abstract":"<p>Your implementation of <code>fetchConnectionToken</code> called the completion block","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorProcessInvalidPaymentIntent":{"name":"SCPErrorProcessInvalidPaymentIntent","abstract":"<p><code>processPayment</code> was called with an unknown or invalid PaymentIntent.","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorNilPaymentIntent":{"name":"SCPErrorNilPaymentIntent","abstract":"<p><code>collectPaymentMethod</code> or <code>processPayment</code> was called with a <code>nil</code> PaymentIntent.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorNilRefundPaymentMethod":{"name":"SCPErrorNilRefundPaymentMethod","abstract":"<p><code>processRefund</code> was called without calling <code>collectRefundPaymentMethod</code>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorInvalidRefundParameters":{"name":"SCPErrorInvalidRefundParameters","abstract":"<p>The RefundParameters object has invalid values. The Charge ID (ch_123abc)","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorInvalidClientSecret":{"name":"SCPErrorInvalidClientSecret","abstract":"<p>A PaymentIntent was referenced using an invalid client secret.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorMustBeDiscoveringToConnect":{"name":"SCPErrorMustBeDiscoveringToConnect","abstract":"<p>The SDK must be actively Discovering Readers in order to successfully","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCannotConnectToUndiscoveredReader":{"name":"SCPErrorCannotConnectToUndiscoveredReader","abstract":"<p>Before connecting to a reader, it must have already been discovered in the","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorInvalidDiscoveryConfiguration":{"name":"SCPErrorInvalidDiscoveryConfiguration","abstract":"<p><code>discoverReaders</code> was called using an invalid SCPDiscoveryConfiguration.","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorInvalidCart":{"name":"SCPErrorInvalidCart","abstract":"<p>No longer used</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorNilReaderDisplayDelegate":{"name":"SCPErrorNilReaderDisplayDelegate","abstract":"<p><code>collectPaymentMethod</code> was called with a <code>nil</code> <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SCPReaderDisplayDelegate.html\">SCPReaderDisplayDelegate</a></code>, but","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorNilUpdate":{"name":"SCPErrorNilUpdate","abstract":"<p><code>installUpdate</code> was passed a <code>nil</code> <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPReaderSoftwareUpdate.html\">SCPReaderSoftwareUpdate</a></code>.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorUnsupportedSDK":{"name":"SCPErrorUnsupportedSDK","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)connectReader:completion:\">-[SCPTerminal connectReader:completion:]</a></code> was called from an unsupported version","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorFeatureNotAvailableWithConnectedReader":{"name":"SCPErrorFeatureNotAvailableWithConnectedReader","abstract":"<p>This feature is currently not available for the selected reader.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCanceled":{"name":"SCPErrorCanceled","abstract":"<p>The command was canceled by your app.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorLocationServicesDisabled":{"name":"SCPErrorLocationServicesDisabled","abstract":"<p>Access to location services is currently disabled. This may be because:</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorBluetoothDisabled":{"name":"SCPErrorBluetoothDisabled","abstract":"<p>This error indicates that Bluetooth is turned off, and the user should use","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorBluetoothScanTimedOut":{"name":"SCPErrorBluetoothScanTimedOut","abstract":"<p>Scanning for bluetooth devices timed out.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorBluetoothLowEnergyUnsupported":{"name":"SCPErrorBluetoothLowEnergyUnsupported","abstract":"<p>Bluetooth Low Energy is unsupported on this iOS device. Use a different","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorReaderSoftwareUpdateFailedBatteryLow":{"name":"SCPErrorReaderSoftwareUpdateFailedBatteryLow","abstract":"<p>Updating the reader software failed because the reader&rsquo;s battery is","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorReaderSoftwareUpdateFailedInterrupted":{"name":"SCPErrorReaderSoftwareUpdateFailedInterrupted","abstract":"<p>Updating the reader software failed because the update was interrupted.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCardInsertNotRead":{"name":"SCPErrorCardInsertNotRead","abstract":"<p>The card is not a chip card.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCardSwipeNotRead":{"name":"SCPErrorCardSwipeNotRead","abstract":"<p>The swipe could not be read.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCardReadTimedOut":{"name":"SCPErrorCardReadTimedOut","abstract":"<p>Reading a card timed out.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCardRemoved":{"name":"SCPErrorCardRemoved","abstract":"<p>The card was removed during the transaction.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorCardLeftInReader":{"name":"SCPErrorCardLeftInReader","abstract":"<p>A card can only be used for one transaction, and must be removed after","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorReaderBusy":{"name":"SCPErrorReaderBusy","abstract":"<p>The reader is busy.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorIncompatibleReader":{"name":"SCPErrorIncompatibleReader","abstract":"<p>An incompatible reader was detected. You can only use the Stripe Terminal","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorReaderCommunicationError":{"name":"SCPErrorReaderCommunicationError","abstract":"<p>Could not communicate with the reader.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorBluetoothError":{"name":"SCPErrorBluetoothError","abstract":"<p>Generic bluetooth error.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorBluetoothConnectTimedOut":{"name":"SCPErrorBluetoothConnectTimedOut","abstract":"<p>Connecting to the bluetooth device timed out. Make sure the device is","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorBluetoothDisconnected":{"name":"SCPErrorBluetoothDisconnected","abstract":"<p>The Bluetooth device was disconnected unexpectedly.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorReaderSoftwareUpdateFailed":{"name":"SCPErrorReaderSoftwareUpdateFailed","abstract":"<p>Generic reader software update error.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorReaderSoftwareUpdateFailedReaderError":{"name":"SCPErrorReaderSoftwareUpdateFailedReaderError","abstract":"<p>Updating the reader software failed because there was an error","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorReaderSoftwareUpdateFailedServerError":{"name":"SCPErrorReaderSoftwareUpdateFailedServerError","abstract":"<p>Updating the reader software failed because there was an error","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorUnsupportedReaderVersion":{"name":"SCPErrorUnsupportedReaderVersion","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)processPayment:completion:\">-[SCPTerminal processPayment:completion:]</a></code> was called from a reader with an","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorUnknownReaderIpAddress":{"name":"SCPErrorUnknownReaderIpAddress","abstract":"<p>The reader returned from discovery does not have an IP address and cannot","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorInternetConnectTimeOut":{"name":"SCPErrorInternetConnectTimeOut","abstract":"<p>Connecting to reader over the internet timed out. Make sure your device and","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorConnectFailedReaderIsInUse":{"name":"SCPErrorConnectFailedReaderIsInUse","abstract":"<p>Connecting to the reader failed because it is currently in use","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorUnexpectedSdkError":{"name":"SCPErrorUnexpectedSdkError","abstract":"<p>Unexpected SDK error.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorPaymentDeclinedByStripeAPI":{"name":"SCPErrorPaymentDeclinedByStripeAPI","abstract":"<p>The Stripe API declined the payment.","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorPaymentDeclinedByReader":{"name":"SCPErrorPaymentDeclinedByReader","abstract":"<p>The reader declined the payment. Try another card.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorRefundFailed":{"name":"SCPErrorRefundFailed","abstract":"<p>The refund failed. The customer’s bank or card issuer was unable to process","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorNotConnectedToInternet":{"name":"SCPErrorNotConnectedToInternet","abstract":"<p>The SDK is not connected to the internet.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorRequestTimedOut":{"name":"SCPErrorRequestTimedOut","abstract":"<p>The underlying request timed out.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorStripeAPIError":{"name":"SCPErrorStripeAPIError","abstract":"<p>The underlying request returned an API error.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorStripeAPIResponseDecodingError":{"name":"SCPErrorStripeAPIResponseDecodingError","abstract":"<p>The API response from Stripe could not be decoded.</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorInternalNetworkError":{"name":"SCPErrorInternalNetworkError","abstract":"<p>Generic network error</p>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorConnectionTokenProviderCompletedWithError":{"name":"SCPErrorConnectionTokenProviderCompletedWithError","abstract":"<p>Your implementation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SCPConnectionTokenProvider.html#/c:objc(pl)SCPConnectionTokenProvider(im)fetchConnectionToken:\">-[SCPConnectionTokenProvider fetchConnectionToken:]</a></code>","parent_name":"SCPError"},"Enums/SCPError.html#/c:@E@SCPError@SCPErrorSessionExpired":{"name":"SCPErrorSessionExpired","abstract":"<p>The current session has expired and the reader must be disconnected and","parent_name":"SCPError"},"Enums/SCPError.html":{"name":"SCPError","abstract":"<p>Possible error codes for NSError objects under the SCPErrorDomain domain.</p>"},"Errors.html#/c:@SCPErrorDomain":{"name":"SCPErrorDomain","abstract":"<p>The error domain for all errors originating from the Stripe Terminal SDK.</p>"},"Errors.html#/c:SCPErrors.h@T@SCPErrorKey":{"name":"SCPErrorKey","abstract":"<p>Use this enum to access <code>userInfo</code> keys for <code>NSError</code> objects under the"},"Errors.html#/c:@SCPErrorKeyMessage":{"name":"SCPErrorKeyMessage","abstract":"<p>An error message explaining what went wrong. You probably shouldn&rsquo;t show this"},"Errors.html#/c:@SCPErrorKeyHttpStatusCode":{"name":"SCPErrorKeyHttpStatusCode","abstract":"<p>The HTTP status code of the response.</p>"},"Errors.html#/c:@SCPErrorKeyReaderMessage":{"name":"SCPErrorKeyReaderMessage","abstract":"<p>This error message comes from the reader. You probably shouldn&rsquo;t show this"},"Errors.html#/c:@SCPErrorKeyStripeAPIRequestId":{"name":"SCPErrorKeyStripeAPIRequestId","abstract":"<p>If a Stripe API request failed, the failed request&rsquo;s id will be returned in the"},"Errors.html#/c:@SCPErrorKeyStripeAPIDeclineCode":{"name":"SCPErrorKeyStripeAPIDeclineCode","abstract":"<p>The decline code returned by the Stripe API.</p>"},"Errors.html#/c:@SCPErrorKeyStripeAPIErrorCode":{"name":"SCPErrorKeyStripeAPIErrorCode","abstract":"<p>The error code returned by the Stripe API.</p>"},"Errors.html#/c:@SCPErrorKeyStripeAPIErrorParameter":{"name":"SCPErrorKeyStripeAPIErrorParameter","abstract":"<p>The parameter the error relates to if the error is parameter-specific.</p>"},"Errors.html#/c:@SCPErrorKeyStripeAPIErrorType":{"name":"SCPErrorKeyStripeAPIErrorType","abstract":"<p>The error type returned by the Stripe API.</p>"},"Errors.html#/c:@SCPErrorKeyStripeAPIPaymentIntent":{"name":"SCPErrorKeyStripeAPIPaymentIntent","abstract":"<p>If a Stripe API request failed and the error has an associated PaymentIntent,"},"Errors.html#/c:@SCPErrorKeyStripeAPIDocUrl":{"name":"SCPErrorKeyStripeAPIDocUrl","abstract":"<p>The documentation URL for the error returned by the Stripe API.</p>"},"Enums/SCPUpdateTimeEstimate.html#/c:@E@SCPUpdateTimeEstimate@SCPUpdateTimeEstimateLessThan1Minute":{"name":"SCPUpdateTimeEstimateLessThan1Minute","abstract":"<p>The update should take less than 1 minute to complete.</p>","parent_name":"SCPUpdateTimeEstimate"},"Enums/SCPUpdateTimeEstimate.html#/c:@E@SCPUpdateTimeEstimate@SCPUpdateTimeEstimate1To2Minutes":{"name":"SCPUpdateTimeEstimate1To2Minutes","abstract":"<p>The update should take 1-2 minutes to complete.</p>","parent_name":"SCPUpdateTimeEstimate"},"Enums/SCPUpdateTimeEstimate.html#/c:@E@SCPUpdateTimeEstimate@SCPUpdateTimeEstimate2To5Minutes":{"name":"SCPUpdateTimeEstimate2To5Minutes","abstract":"<p>The update should take 2-5 minutes to complete.</p>","parent_name":"SCPUpdateTimeEstimate"},"Enums/SCPUpdateTimeEstimate.html#/c:@E@SCPUpdateTimeEstimate@SCPUpdateTimeEstimate5To15Minutes":{"name":"SCPUpdateTimeEstimate5To15Minutes","abstract":"<p>The update should take 5-15 minutes to complete.</p>","parent_name":"SCPUpdateTimeEstimate"},"Classes/SCPReaderSoftwareUpdate.html#/c:objc(cs)SCPReaderSoftwareUpdate(py)estimatedUpdateTime":{"name":"estimatedUpdateTime","abstract":"<p>The estimated amount of time for the update.</p>","parent_name":"SCPReaderSoftwareUpdate"},"Classes/SCPReaderSoftwareUpdate.html#/c:objc(cs)SCPReaderSoftwareUpdate(py)deviceSoftwareVersion":{"name":"deviceSoftwareVersion","abstract":"<p>The target version for the update.</p>","parent_name":"SCPReaderSoftwareUpdate"},"Classes/SCPReaderSoftwareUpdate.html#/c:objc(cs)SCPReaderSoftwareUpdate(cm)stringFromUpdateTimeEstimate:":{"name":"+stringFromUpdateTimeEstimate:","abstract":"<p>Returns an unlocalized string for the given update time estimate.</p>","parent_name":"SCPReaderSoftwareUpdate"},"Classes/SCPReaderSoftwareUpdate.html#/c:objc(cs)SCPReaderSoftwareUpdate(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPReaderSoftwareUpdate"},"Classes/SCPReaderSoftwareUpdate.html#/c:objc(cs)SCPReaderSoftwareUpdate(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPReaderSoftwareUpdate"},"Protocols/SCPReaderSoftwareUpdateDelegate.html#/c:objc(pl)SCPReaderSoftwareUpdateDelegate(im)terminal:didReportReaderSoftwareUpdateProgress:":{"name":"-terminal:didReportReaderSoftwareUpdateProgress:","abstract":"<p>The terminal reported progress on a reader software update.</p>","parent_name":"SCPReaderSoftwareUpdateDelegate"},"Protocols/SCPReaderSoftwareUpdateDelegate.html":{"name":"SCPReaderSoftwareUpdateDelegate","abstract":"<p>Implement this protocol to handle updates when checking for and installing"},"Classes/SCPReaderSoftwareUpdate.html":{"name":"SCPReaderSoftwareUpdate","abstract":"<p>An object representing a reader update.</p>"},"Enums/SCPUpdateTimeEstimate.html":{"name":"SCPUpdateTimeEstimate","abstract":"<p>The estimated amount of time for an update. Note that these times are estimates;"},"Enums/SCPRefundStatus.html#/c:@E@SCPRefundStatus@SCPRefundStatusSucceeded":{"name":"SCPRefundStatusSucceeded","abstract":"<p>The refund succeeded.</p>","parent_name":"SCPRefundStatus"},"Enums/SCPRefundStatus.html#/c:@E@SCPRefundStatus@SCPRefundStatusPending":{"name":"SCPRefundStatusPending","abstract":"<p>The refund is pending.</p>","parent_name":"SCPRefundStatus"},"Enums/SCPRefundStatus.html#/c:@E@SCPRefundStatus@SCPRefundStatusFailed":{"name":"SCPRefundStatusFailed","abstract":"<p>The refund failed.</p>","parent_name":"SCPRefundStatus"},"Enums/SCPRefundStatus.html#/c:@E@SCPRefundStatus@SCPRefundStatusUnknown":{"name":"SCPRefundStatusUnknown","abstract":"<p>Unknown refund state.</p>","parent_name":"SCPRefundStatus"},"Classes/SCPProcessRefundError.html#/c:objc(cs)SCPProcessRefundError(py)refund":{"name":"refund","abstract":"<p>If <code>processRefund</code> failed after the refund was created, this property contains","parent_name":"SCPProcessRefundError"},"Classes/SCPProcessRefundError.html#/c:objc(cs)SCPProcessRefundError(py)requestError":{"name":"requestError","abstract":"<p>If <code>processRefund</code> failed because the underlying network request errored,","parent_name":"SCPProcessRefundError"},"Classes/SCPProcessRefundError.html#/c:objc(cs)SCPProcessRefundError(py)failureReason":{"name":"failureReason","abstract":"<p>If <code>processRefund</code> failed because the payment method was declined, this","parent_name":"SCPProcessRefundError"},"Classes/SCPProcessRefundError.html#/c:objc(cs)SCPProcessRefundError(cm)init":{"name":"+init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPProcessRefundError"},"Classes/SCPProcessRefundError.html#/c:objc(cs)SCPProcessRefundError(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPProcessRefundError"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(py)chargeId":{"name":"chargeId","abstract":"<p>The ID of the charge to be refunded.</p>","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(py)amount":{"name":"amount","abstract":"<p>The amount of the refund, provided in the currency&rsquo;s smallest unit.</p>","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(py)currency":{"name":"currency","abstract":"<p>Three-letter ISO currency code. Must be a supported currency.</p>","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(py)metadata":{"name":"metadata","abstract":"<p>Set of key-value pairs that you can attach to an object. This can be useful for","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(py)reverseTransfer":{"name":"reverseTransfer","abstract":"<p>Connect only: Nullable boolean indicating whether the transfer should be","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(py)refundApplicationFee":{"name":"refundApplicationFee","abstract":"<p>Connect only: Nullable boolean indicating whether the application fee should be","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(im)initWithChargeId:amount:currency:":{"name":"-initWithChargeId:amount:currency:","abstract":"<p>Initializes <code>SCPRefundParameters</code> with the given charge, amount, and currency.</p>","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(im)init":{"name":"-init","abstract":"<p>Use <code>initWithChargeId:amount:currency:</code></p>","parent_name":"SCPRefundParameters"},"Classes/SCPRefundParameters.html#/c:objc(cs)SCPRefundParameters(cm)new":{"name":"+new","abstract":"<p>Use <code>initWithChargeId:amount:currency:</code></p>","parent_name":"SCPRefundParameters"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)stripeId":{"name":"stripeId","abstract":"<p>The unique identifier for the refund.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)amount":{"name":"amount","abstract":"<p>The amount that was refunded.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)charge":{"name":"charge","abstract":"<p>The ID of the charge that was refunded</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)created":{"name":"created","abstract":"<p>When the refund object was created.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)currency":{"name":"currency","abstract":"<p>The currency of the amount refunded.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)metadata":{"name":"metadata","abstract":"<p>Metadata associated with the refund.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)reason":{"name":"reason","abstract":"<p>Reason for the refund, either user-provided (<code>duplicate</code>, <code>fraudulent</code>, or","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)status":{"name":"status","abstract":"<p>The status of the refund.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)paymentMethodDetails":{"name":"paymentMethodDetails","abstract":"<p>The payment method details associated with the refund.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(py)failureReason":{"name":"failureReason","abstract":"<p>If the refund failed, the reason for refund failure if known.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPRefund"},"Classes/SCPRefund.html#/c:objc(cs)SCPRefund(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPRefund"},"Enums/SCPPaymentMethodType.html#/c:@E@SCPPaymentMethodType@SCPPaymentMethodTypeCard":{"name":"SCPPaymentMethodTypeCard","abstract":"<p>A card payment method.</p>","parent_name":"SCPPaymentMethodType"},"Enums/SCPPaymentMethodType.html#/c:@E@SCPPaymentMethodType@SCPPaymentMethodTypeCardPresent":{"name":"SCPPaymentMethodTypeCardPresent","abstract":"<p>A card present payment method.</p>","parent_name":"SCPPaymentMethodType"},"Enums/SCPPaymentMethodType.html#/c:@E@SCPPaymentMethodType@SCPPaymentMethodTypeUnknown":{"name":"SCPPaymentMethodTypeUnknown","abstract":"<p>An unknown type.</p>","parent_name":"SCPPaymentMethodType"},"Classes/SCPPaymentMethod.html#/c:objc(cs)SCPPaymentMethod(py)stripeId":{"name":"stripeId","abstract":"<p>The unique identifier for the PaymentMethod</p>","parent_name":"SCPPaymentMethod"},"Classes/SCPPaymentMethod.html#/c:objc(cs)SCPPaymentMethod(py)created":{"name":"created","abstract":"<p>Time at which the object was created. Measured in seconds since the Unix epoch.</p>","parent_name":"SCPPaymentMethod"},"Classes/SCPPaymentMethod.html#/c:objc(cs)SCPPaymentMethod(py)type":{"name":"type","abstract":"<p>The type of the PaymentMethod.  The corresponding, similarly named property contains additional information specific to the PaymentMethod type.","parent_name":"SCPPaymentMethod"},"Classes/SCPPaymentMethod.html#/c:objc(cs)SCPPaymentMethod(py)card":{"name":"card","abstract":"<p>If this is a card PaymentMethod (ie <code>self.type == SCPPaymentMethodTypeCard</code>), this contains additional details.</p>","parent_name":"SCPPaymentMethod"},"Classes/SCPPaymentMethod.html#/c:objc(cs)SCPPaymentMethod(py)customer":{"name":"customer","abstract":"<p>The Customer that this PaymentMethod is attached to, or nil.</p>","parent_name":"SCPPaymentMethod"},"Classes/SCPPaymentMethod.html#/c:objc(cs)SCPPaymentMethod(py)metadata":{"name":"metadata","abstract":"<p>Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</p>","parent_name":"SCPPaymentMethod"},"Classes/SCPPaymentMethod.html#/c:objc(cs)SCPPaymentMethod(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPPaymentMethod"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(py)brand":{"name":"brand","abstract":"<p>The issuer of the card.</p>","parent_name":"SCPCardDetails"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(py)country":{"name":"country","abstract":"<p>Two-letter ISO code representing the country of the card.</p>","parent_name":"SCPCardDetails"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(py)expMonth":{"name":"expMonth","abstract":"<p>Two-digit number representing the card’s expiration month.","parent_name":"SCPCardDetails"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(py)expYear":{"name":"expYear","abstract":"<p>Four-digit number representing the card’s expiration year.","parent_name":"SCPCardDetails"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(py)funding":{"name":"funding","abstract":"<p>Card funding type. Ex: credit, debit, etc.</p>","parent_name":"SCPCardDetails"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(py)last4":{"name":"last4","abstract":"<p>The last four digits of the card.</p>","parent_name":"SCPCardDetails"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(py)fingerprint":{"name":"fingerprint","abstract":"<p>Uniquely identifies this particular card number. You can use this attribute","parent_name":"SCPCardDetails"},"Classes/SCPCardDetails.html#/c:objc(cs)SCPCardDetails(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPCardDetails"},"Classes/SCPReadReusableCardParameters.html#/c:objc(cs)SCPReadReusableCardParameters(py)customer":{"name":"customer","abstract":"<p>Optional parameter: attach the new PaymentMethod to Customer with this id</p>","parent_name":"SCPReadReusableCardParameters"},"Classes/SCPReadReusableCardParameters.html#/c:objc(cs)SCPReadReusableCardParameters(py)metadata":{"name":"metadata","abstract":"<p>Optional set of key-value pairs attached to the object. The default is nil.</p>","parent_name":"SCPReadReusableCardParameters"},"Classes/SCPPaymentMethodDetails.html#/c:objc(cs)SCPPaymentMethodDetails(py)type":{"name":"type","abstract":"<p>The type of the PaymentMethod.  The corresponding, similarly named property","parent_name":"SCPPaymentMethodDetails"},"Classes/SCPPaymentMethodDetails.html#/c:objc(cs)SCPPaymentMethodDetails(py)cardPresent":{"name":"cardPresent","abstract":"<p>If this is a card present payment method (ie <code>self.type == SCPPaymentMethodTypeCardPresent</code>),","parent_name":"SCPPaymentMethodDetails"},"Classes/SCPPaymentMethodDetails.html#/c:objc(cs)SCPPaymentMethodDetails(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPPaymentMethodDetails"},"Enums/SCPChargeStatus.html#/c:@E@SCPChargeStatus@SCPChargeStatusSucceeded":{"name":"SCPChargeStatusSucceeded","abstract":"<p>The charge succeeded.</p>","parent_name":"SCPChargeStatus"},"Enums/SCPChargeStatus.html#/c:@E@SCPChargeStatus@SCPChargeStatusPending":{"name":"SCPChargeStatusPending","abstract":"<p>The charge succeeded.</p>","parent_name":"SCPChargeStatus"},"Enums/SCPChargeStatus.html#/c:@E@SCPChargeStatus@SCPChargeStatusFailed":{"name":"SCPChargeStatusFailed","abstract":"<p>The charge failed.</p>","parent_name":"SCPChargeStatus"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(py)amount":{"name":"amount","abstract":"<p>The amount of the charge.</p>","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(py)currency":{"name":"currency","abstract":"<p>The currency of the charge.</p>","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(py)status":{"name":"status","abstract":"<p>The status of the charge.</p>","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(py)paymentMethodDetails":{"name":"paymentMethodDetails","abstract":"<p>The payment method details associated with the charge.</p>","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(py)stripeDescription":{"name":"stripeDescription","abstract":"<p>A string describing the charge, displayed in the Stripe dashboard and in","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(py)metadata":{"name":"metadata","abstract":"<p>Metadata associated with the charge.</p>","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(py)stripeId":{"name":"stripeId","abstract":"<p>The unique identifier for the charge.</p>","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPCharge"},"Classes/SCPCharge.html#/c:objc(cs)SCPCharge(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPCharge"},"Enums/SCPCardFundingType.html#/c:@E@SCPCardFundingType@SCPCardFundingTypeDebit":{"name":"SCPCardFundingTypeDebit","abstract":"<p>Debit</p>","parent_name":"SCPCardFundingType"},"Enums/SCPCardFundingType.html#/c:@E@SCPCardFundingType@SCPCardFundingTypeCredit":{"name":"SCPCardFundingTypeCredit","abstract":"<p>Credit</p>","parent_name":"SCPCardFundingType"},"Enums/SCPCardFundingType.html#/c:@E@SCPCardFundingType@SCPCardFundingTypePrepaid":{"name":"SCPCardFundingTypePrepaid","abstract":"<p>Prepaid</p>","parent_name":"SCPCardFundingType"},"Enums/SCPCardFundingType.html#/c:@E@SCPCardFundingType@SCPCardFundingTypeOther":{"name":"SCPCardFundingTypeOther","abstract":"<p>An other or unknown type of funding source</p>","parent_name":"SCPCardFundingType"},"Enums/SCPCardBrand.html#/c:@E@SCPCardBrand@SCPCardBrandVisa":{"name":"SCPCardBrandVisa","abstract":"<p>Visa card</p>","parent_name":"SCPCardBrand"},"Enums/SCPCardBrand.html#/c:@E@SCPCardBrand@SCPCardBrandAmex":{"name":"SCPCardBrandAmex","abstract":"<p>American Express card</p>","parent_name":"SCPCardBrand"},"Enums/SCPCardBrand.html#/c:@E@SCPCardBrand@SCPCardBrandMasterCard":{"name":"SCPCardBrandMasterCard","abstract":"<p>MasterCard card</p>","parent_name":"SCPCardBrand"},"Enums/SCPCardBrand.html#/c:@E@SCPCardBrand@SCPCardBrandDiscover":{"name":"SCPCardBrandDiscover","abstract":"<p>Discover card</p>","parent_name":"SCPCardBrand"},"Enums/SCPCardBrand.html#/c:@E@SCPCardBrand@SCPCardBrandJCB":{"name":"SCPCardBrandJCB","abstract":"<p>JCB card</p>","parent_name":"SCPCardBrand"},"Enums/SCPCardBrand.html#/c:@E@SCPCardBrand@SCPCardBrandDinersClub":{"name":"SCPCardBrandDinersClub","abstract":"<p>Diners Club card</p>","parent_name":"SCPCardBrand"},"Enums/SCPCardBrand.html#/c:@E@SCPCardBrand@SCPCardBrandUnknown":{"name":"SCPCardBrandUnknown","abstract":"<p>An unknown card brand</p>","parent_name":"SCPCardBrand"},"Classes/SCPProcessPaymentError.html#/c:objc(cs)SCPProcessPaymentError(py)paymentIntent":{"name":"paymentIntent","abstract":"<p>The updated PaymentIntent after <code>processPayment</code> failed.</p>","parent_name":"SCPProcessPaymentError"},"Classes/SCPProcessPaymentError.html#/c:objc(cs)SCPProcessPaymentError(py)requestError":{"name":"requestError","abstract":"<p>If <code>processPayment</code> failed because the underlying network request errored,","parent_name":"SCPProcessPaymentError"},"Classes/SCPProcessPaymentError.html#/c:objc(cs)SCPProcessPaymentError(py)declineCode":{"name":"declineCode","abstract":"<p>If <code>processPayment</code> failed because the payment method was declined, this","parent_name":"SCPProcessPaymentError"},"Classes/SCPProcessPaymentError.html#/c:objc(cs)SCPProcessPaymentError(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPProcessPaymentError"},"Classes/SCPProcessPaymentError.html#/c:objc(cs)SCPProcessPaymentError(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPProcessPaymentError"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(py)applicationPreferredName":{"name":"applicationPreferredName","abstract":"<p>Also known as &ldquo;Application Name&rdquo;. Required on EMV receipts.</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(py)dedicatedFileName":{"name":"dedicatedFileName","abstract":"<p>Also known as &ldquo;AID&rdquo;. Required on EMV receipts.</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(py)authorizationResponseCode":{"name":"authorizationResponseCode","abstract":"<p>Authorization Response Code</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(py)applicationCryptogram":{"name":"applicationCryptogram","abstract":"<p>Application Cryptogram</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(py)terminalVerificationResults":{"name":"terminalVerificationResults","abstract":"<p>TVR</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(py)transactionStatusInformation":{"name":"transactionStatusInformation","abstract":"<p>TSI</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPReceiptDetails.html#/c:objc(cs)SCPReceiptDetails(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPReceiptDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)last4":{"name":"last4","abstract":"<p>The last 4 digits of the card.</p>","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)expMonth":{"name":"expMonth","abstract":"<p>The card&rsquo;s expiration month. 1-indexed (i.e. 1 == January)</p>","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)expYear":{"name":"expYear","abstract":"<p>The card&rsquo;s expiration year.</p>","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)cardholderName":{"name":"cardholderName","abstract":"<p>The cardholder name as read from the card, in ISO 7813 format. May include","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)funding":{"name":"funding","abstract":"<p>The card&rsquo;s funding type.</p>","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)brand":{"name":"brand","abstract":"<p>The issuing brand of the card.</p>","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)fingerprint":{"name":"fingerprint","abstract":"<p>A string uniquely identifying this card number.</p>","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)generatedCard":{"name":"generatedCard","abstract":"<p>ID of a <code>card</code> PaymentMethod that may be attached to a Customer for future","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)receipt":{"name":"receipt","abstract":"<p>Receipt information for the card present transaction. Only present for EMV","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(py)emvAuthData":{"name":"emvAuthData","abstract":"<p>(Only applicable to EMV payments) The authorization data from the card","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPCardPresentDetails"},"Classes/SCPCardPresentDetails.html#/c:objc(cs)SCPCardPresentDetails(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPCardPresentDetails"},"Enums/SCPPaymentStatus.html#/c:@E@SCPPaymentStatus@SCPPaymentStatusNotReady":{"name":"SCPPaymentStatusNotReady","abstract":"<p>The SDK is not ready to start a payment. It may be busy with another","parent_name":"SCPPaymentStatus"},"Enums/SCPPaymentStatus.html#/c:@E@SCPPaymentStatus@SCPPaymentStatusReady":{"name":"SCPPaymentStatusReady","abstract":"<p>The SDK is ready to start a payment.</p>","parent_name":"SCPPaymentStatus"},"Enums/SCPPaymentStatus.html#/c:@E@SCPPaymentStatus@SCPPaymentStatusWaitingForInput":{"name":"SCPPaymentStatusWaitingForInput","abstract":"<p>The SDK is waiting for input from the customer (e.g., for a card to","parent_name":"SCPPaymentStatus"},"Enums/SCPPaymentStatus.html#/c:@E@SCPPaymentStatus@SCPPaymentStatusProcessing":{"name":"SCPPaymentStatusProcessing","abstract":"<p>The SDK is processing a payment.</p>","parent_name":"SCPPaymentStatus"},"Enums/SCPPaymentIntentStatus.html#/c:@E@SCPPaymentIntentStatus@SCPPaymentIntentStatusRequiresPaymentMethod":{"name":"SCPPaymentIntentStatusRequiresPaymentMethod","abstract":"<p>Next step: collect a payment method by calling <code>collectPaymentMethod</code>.</p>","parent_name":"SCPPaymentIntentStatus"},"Enums/SCPPaymentIntentStatus.html#/c:@E@SCPPaymentIntentStatus@SCPPaymentIntentStatusRequiresConfirmation":{"name":"SCPPaymentIntentStatusRequiresConfirmation","abstract":"<p>Next step: process the payment by calling <code>processPayment</code>.</p>","parent_name":"SCPPaymentIntentStatus"},"Enums/SCPPaymentIntentStatus.html#/c:@E@SCPPaymentIntentStatus@SCPPaymentIntentStatusRequiresCapture":{"name":"SCPPaymentIntentStatusRequiresCapture","abstract":"<p>Next step: capture the PaymentIntent on your backend via the Stripe API.</p>","parent_name":"SCPPaymentIntentStatus"},"Enums/SCPPaymentIntentStatus.html#/c:@E@SCPPaymentIntentStatus@SCPPaymentIntentStatusProcessing":{"name":"SCPPaymentIntentStatusProcessing","abstract":"<p>The PaymentIntent is in the middle of full EMV processing.</p>","parent_name":"SCPPaymentIntentStatus"},"Enums/SCPPaymentIntentStatus.html#/c:@E@SCPPaymentIntentStatus@SCPPaymentIntentStatusCanceled":{"name":"SCPPaymentIntentStatusCanceled","abstract":"<p>The PaymentIntent was canceled.</p>","parent_name":"SCPPaymentIntentStatus"},"Enums/SCPPaymentIntentStatus.html#/c:@E@SCPPaymentIntentStatus@SCPPaymentIntentStatusSucceeded":{"name":"SCPPaymentIntentStatusSucceeded","abstract":"<p>The PaymentIntent succeeded.</p>","parent_name":"SCPPaymentIntentStatus"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)amount":{"name":"amount","abstract":"<p>The amount of the payment, provided in the currency&rsquo;s smallest unit.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)currency":{"name":"currency","abstract":"<p>Three-letter ISO currency code, in lowercase. Must be a supported currency.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)metadata":{"name":"metadata","abstract":"<p>Set of key-value pairs that you can attach to an object. This can be useful for","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)stripeDescription":{"name":"stripeDescription","abstract":"<p>An arbitrary string attached to the object. If you send a receipt email for","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)statementDescriptor":{"name":"statementDescriptor","abstract":"<p>A string to be displayed on your customer&rsquo;s credit card statement. This may be","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)receiptEmail":{"name":"receiptEmail","abstract":"<p>Email address that the receipt for the resulting payment will be sent to.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)customer":{"name":"customer","abstract":"<p>The ID of the Customer this PaymentIntent is for, if one exists.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)applicationFeeAmount":{"name":"applicationFeeAmount","abstract":"<p>The amount of the application fee (if any) that will be applied to the","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)transferGroup":{"name":"transferGroup","abstract":"<p>A string that identifies the resulting payment as part of a group.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)transferDataDestination":{"name":"transferDataDestination","abstract":"<p>The account (if any) the payment will be attributed to for tax reporting, and","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)onBehalfOf":{"name":"onBehalfOf","abstract":"<p>The Stripe account ID for which these funds are intended.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(im)initWithAmount:currency:":{"name":"-initWithAmount:currency:","abstract":"<p>Initializes SCPPaymentIntentParameters with the given parameters.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(im)init":{"name":"-init","abstract":"<p>Use <code>initWithAmount:currency:</code></p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(cm)new":{"name":"+new","abstract":"<p>Use <code>initWithAmount:currency:</code></p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntentParameters.html#/c:objc(cs)SCPPaymentIntentParameters(py)description":{"name":"description","abstract":"<p>Use stripeDescription for the string attached to the object.</p>","parent_name":"SCPPaymentIntentParameters"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(py)stripeId":{"name":"stripeId","abstract":"<p>The unique identifier for the intent.</p>","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(py)created":{"name":"created","abstract":"<p>When the intent was created.</p>","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(py)status":{"name":"status","abstract":"<p>The status of the PaymentIntent.</p>","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(py)amount":{"name":"amount","abstract":"<p>The amount to be collected by this PaymentIntent, provided in the currency&rsquo;s","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(py)currency":{"name":"currency","abstract":"<p>The currency of the payment.</p>","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(py)metadata":{"name":"metadata","abstract":"<p>Set of key-value pairs attached to the object.</p>","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(py)charges":{"name":"charges","abstract":"<p>Charges that were created by this PaymentIntent, if any.</p>","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate <code>SCPPaymentIntent</code>. You should only use","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html#/c:objc(cs)SCPPaymentIntent(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate <code>SCPPaymentIntent</code>. You should only use","parent_name":"SCPPaymentIntent"},"Classes/SCPPaymentIntent.html":{"name":"SCPPaymentIntent","abstract":"<p>A PaymentIntent tracks the process of collecting a payment from your customer."},"Classes/SCPPaymentIntentParameters.html":{"name":"SCPPaymentIntentParameters","abstract":"<p>Parameters for creating an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPPaymentIntent.html\">SCPPaymentIntent</a></code>.</p>"},"Enums/SCPPaymentIntentStatus.html":{"name":"SCPPaymentIntentStatus","abstract":"<p>The possible statuses for a PaymentIntent.</p>"},"Enums/SCPPaymentStatus.html":{"name":"SCPPaymentStatus","abstract":"<p>The possible payment statuses for the SDK.</p>"},"Classes/SCPCardPresentDetails.html":{"name":"SCPCardPresentDetails","abstract":"<p>An object representing details from a transaction using a card_present"},"Classes/SCPReceiptDetails.html":{"name":"SCPReceiptDetails","abstract":"<p>Receipt details associated with a card present transaction.</p>"},"Classes/SCPProcessPaymentError.html":{"name":"SCPProcessPaymentError","abstract":"<p>An error from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)processPayment:completion:\">-[SCPTerminal processPayment:completion:]</a></code>.</p>"},"Enums/SCPCardBrand.html":{"name":"SCPCardBrand","abstract":"<p>The various card brands for a card.</p>"},"Enums/SCPCardFundingType.html":{"name":"SCPCardFundingType","abstract":"<p>The various funding sources for a card.</p>"},"Classes/SCPCharge.html":{"name":"SCPCharge","abstract":"<p>An object representing a Stripe charge.</p>"},"Enums/SCPChargeStatus.html":{"name":"SCPChargeStatus","abstract":"<p>The possible statuses for a charge</p>"},"Classes/SCPPaymentMethodDetails.html":{"name":"SCPPaymentMethodDetails","abstract":"<p>Details about a PaymentMethod at a specific time. ex: at time of transaction"},"Classes/SCPReadReusableCardParameters.html":{"name":"SCPReadReusableCardParameters","abstract":"<p>Parameters for reading a reusable card.</p>"},"Classes/SCPCardDetails.html":{"name":"SCPCardDetails","abstract":"<p>Contains details about a user&rsquo;s credit card.</p>"},"Classes/SCPPaymentMethod.html":{"name":"SCPPaymentMethod","abstract":"<p>PaymentMethod objects represent your customer&rsquo;s payment instruments."},"Enums/SCPPaymentMethodType.html":{"name":"SCPPaymentMethodType","abstract":"<p>The type of the PaymentMethod.</p>"},"Classes/SCPRefund.html":{"name":"SCPRefund","abstract":"<p>An object representing a Stripe refund.</p>"},"Classes/SCPRefundParameters.html":{"name":"SCPRefundParameters","abstract":"<p>Parameters for creating an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPRefund.html\">SCPRefund</a></code>.</p>"},"Classes/SCPProcessRefundError.html":{"name":"SCPProcessRefundError","abstract":"<p>An error from <code>-[SCPTerminal processRefund:completion:]</code>.</p>"},"Enums/SCPRefundStatus.html":{"name":"SCPRefundStatus","abstract":"<p>The possible statuses for a refund.</p>"},"Classes/SCPCartLineItem.html#/c:objc(cs)SCPCartLineItem(py)quantity":{"name":"quantity","abstract":"<p>The quantity of the line item being purchased.</p>","parent_name":"SCPCartLineItem"},"Classes/SCPCartLineItem.html#/c:objc(cs)SCPCartLineItem(py)displayName":{"name":"displayName","abstract":"<p>The description or name of the item.</p>","parent_name":"SCPCartLineItem"},"Classes/SCPCartLineItem.html#/c:objc(cs)SCPCartLineItem(py)amount":{"name":"amount","abstract":"<p>The price of the item in cents.</p>","parent_name":"SCPCartLineItem"},"Classes/SCPCartLineItem.html#/c:objc(cs)SCPCartLineItem(im)initWithDisplayName:quantity:amount:":{"name":"-initWithDisplayName:quantity:amount:","abstract":"<p>The values set here will be shown on the screen as-is. Make sure","parent_name":"SCPCartLineItem"},"Classes/SCPCart.html#/c:objc(cs)SCPCart(py)lineItems":{"name":"lineItems","abstract":"<p>You can add or remove line items from this array individually or reassign the array entirely.","parent_name":"SCPCart"},"Classes/SCPCart.html#/c:objc(cs)SCPCart(py)tax":{"name":"tax","abstract":"<p>The amount of tax in cents.</p>","parent_name":"SCPCart"},"Classes/SCPCart.html#/c:objc(cs)SCPCart(py)total":{"name":"total","abstract":"<p>Total balance of cart due in cents.</p>","parent_name":"SCPCart"},"Classes/SCPCart.html#/c:objc(cs)SCPCart(py)currency":{"name":"currency","abstract":"<p>The currency of the basket (i.e. USD or AUD).</p>","parent_name":"SCPCart"},"Classes/SCPCart.html#/c:objc(cs)SCPCart(im)initWithCurrency:tax:total:":{"name":"-initWithCurrency:tax:total:","abstract":"<p>Initializes an SCPCart with tax and total, in cents, as well as the currency.","parent_name":"SCPCart"},"Classes/SCPCart.html#/c:objc(cs)SCPCart(im)init":{"name":"-init","abstract":"<p>Use initWithTax:</p>","parent_name":"SCPCart"},"Classes/SCPCart.html#/c:objc(cs)SCPCart(cm)new":{"name":"+new","abstract":"<p>Use initWithTax:</p>","parent_name":"SCPCart"},"Protocols/SCPDiscoveryDelegate.html#/c:objc(pl)SCPDiscoveryDelegate(im)terminal:didUpdateDiscoveredReaders:":{"name":"-terminal:didUpdateDiscoveredReaders:","abstract":"<p>This method will be called repeatedly until:</p>","parent_name":"SCPDiscoveryDelegate"},"Enums/SCPDiscoveryMethod.html#/c:@E@SCPDiscoveryMethod@SCPDiscoveryMethodBluetoothScan":{"name":"SCPDiscoveryMethodBluetoothScan","abstract":"<p>Bluetooth Scan</p>","parent_name":"SCPDiscoveryMethod"},"Enums/SCPDiscoveryMethod.html#/c:@E@SCPDiscoveryMethod@SCPDiscoveryMethodBluetoothProximity":{"name":"SCPDiscoveryMethodBluetoothProximity","abstract":"<p>Bluetooth Proximity</p>","parent_name":"SCPDiscoveryMethod"},"Enums/SCPDiscoveryMethod.html#/c:@E@SCPDiscoveryMethod@SCPDiscoveryMethodInternet":{"name":"SCPDiscoveryMethodInternet","abstract":"<p>Internet</p>","parent_name":"SCPDiscoveryMethod"},"Enums/SCPDeviceType.html#/c:@E@SCPDeviceType@SCPDeviceTypeChipper2X":{"name":"SCPDeviceTypeChipper2X","abstract":"<p>The BBPOS Chipper 2X BT mobile reader.</p>","parent_name":"SCPDeviceType"},"Enums/SCPDeviceType.html#/c:@E@SCPDeviceType@SCPDeviceTypeVerifoneP400":{"name":"SCPDeviceTypeVerifoneP400","abstract":"<p>The Verifone P400 countertop reader.</p>","parent_name":"SCPDeviceType"},"Enums/SCPDeviceType.html#/c:@E@SCPDeviceType@SCPDeviceTypeWisePad3":{"name":"SCPDeviceTypeWisePad3","abstract":"<p>The BBPOS WisePad 3 mobile reader.</p>","parent_name":"SCPDeviceType"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(im)initWithDeviceType:simulated:":{"name":"-initWithDeviceType:simulated:","abstract":"<p>Initializes a discovery configuration with the given device type, selecting","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(im)initWithDeviceType:discoveryMethod:simulated:":{"name":"-initWithDeviceType:discoveryMethod:simulated:","abstract":"<p>Initializes a discovery configuration with the given device type and discovery method.</p>","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(im)initWithDeviceType:discoveryMethod:locationId:simulated:":{"name":"-initWithDeviceType:discoveryMethod:locationId:simulated:","abstract":"<p>Initializes a discovery configuration with the given device type and","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(py)timeout":{"name":"timeout","abstract":"<p>The timeout (in seconds) after which <code>discoverReaders:</code> should fail. If the","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(py)deviceType":{"name":"deviceType","abstract":"<p>The reader device type to discover.</p>","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(py)discoveryMethod":{"name":"discoveryMethod","abstract":"<p>The method by which to discover readers.</p>","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(py)simulated":{"name":"simulated","abstract":"<p>Whether to use simulated discovery to discover a device simulator.</p>","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(py)locationId":{"name":"locationId","abstract":"<p>A location ID that can be used to filter discovery result so only readers","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(im)init":{"name":"-init","abstract":"<p>Use <code>initWithDeviceType:simulated:</code> or <code>initWithDeviceType:discoveryMethod:simulated:</code></p>","parent_name":"SCPDiscoveryConfiguration"},"Classes/SCPDiscoveryConfiguration.html#/c:objc(cs)SCPDiscoveryConfiguration(cm)new":{"name":"+new","abstract":"<p>Use <code>initWithDeviceType:simulated:</code> or <code>initWithDeviceType:discoveryMethod:simulated:</code></p>","parent_name":"SCPDiscoveryConfiguration"},"Enums/SCPReaderNetworkStatus.html#/c:@E@SCPReaderNetworkStatus@SCPReaderNetworkStatusOffline":{"name":"SCPReaderNetworkStatusOffline","abstract":"<p>The reader is offline. Note that Chipper 2x and WisePad 3 will default to","parent_name":"SCPReaderNetworkStatus"},"Enums/SCPReaderNetworkStatus.html#/c:@E@SCPReaderNetworkStatus@SCPReaderNetworkStatusOnline":{"name":"SCPReaderNetworkStatusOnline","abstract":"<p>The reader is online.</p>","parent_name":"SCPReaderNetworkStatus"},"Enums/SCPReaderEvent.html#/c:@E@SCPReaderEvent@SCPReaderEventCardInserted":{"name":"SCPReaderEventCardInserted","abstract":"<p>A card was inserted.</p>","parent_name":"SCPReaderEvent"},"Enums/SCPReaderEvent.html#/c:@E@SCPReaderEvent@SCPReaderEventCardRemoved":{"name":"SCPReaderEventCardRemoved","abstract":"<p>A card was removed.</p>","parent_name":"SCPReaderEvent"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageRetryCard":{"name":"SCPReaderDisplayMessageRetryCard","abstract":"<p>Retry the presented card.</p>","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageInsertCard":{"name":"SCPReaderDisplayMessageInsertCard","abstract":"<p>Insert the presented card.</p>","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageInsertOrSwipeCard":{"name":"SCPReaderDisplayMessageInsertOrSwipeCard","abstract":"<p>Insert or swipe the presented card.</p>","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageSwipeCard":{"name":"SCPReaderDisplayMessageSwipeCard","abstract":"<p>Swipe the presented card.</p>","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageRemoveCard":{"name":"SCPReaderDisplayMessageRemoveCard","abstract":"<p>Remove the presented card.</p>","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageMultipleContactlessCardsDetected":{"name":"SCPReaderDisplayMessageMultipleContactlessCardsDetected","abstract":"<p>The reader detected multiple contactless cards. Make sure only one","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageTryAnotherReadMethod":{"name":"SCPReaderDisplayMessageTryAnotherReadMethod","abstract":"<p>The card could not be read. Try another read method on the same card, or","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderDisplayMessage.html#/c:@E@SCPReaderDisplayMessage@SCPReaderDisplayMessageTryAnotherCard":{"name":"SCPReaderDisplayMessageTryAnotherCard","abstract":"<p>The card is invalid. Try another card.</p>","parent_name":"SCPReaderDisplayMessage"},"Enums/SCPReaderInputOptions.html#/c:@E@SCPReaderInputOptions@SCPReaderInputOptionNone":{"name":"SCPReaderInputOptionNone","abstract":"<p>No input options are available on the reader.</p>","parent_name":"SCPReaderInputOptions"},"Enums/SCPReaderInputOptions.html#/c:@E@SCPReaderInputOptions@SCPReaderInputOptionSwipeCard":{"name":"SCPReaderInputOptionSwipeCard","abstract":"<p>Swipe a magstripe card.</p>","parent_name":"SCPReaderInputOptions"},"Enums/SCPReaderInputOptions.html#/c:@E@SCPReaderInputOptions@SCPReaderInputOptionInsertCard":{"name":"SCPReaderInputOptionInsertCard","abstract":"<p>Insert a chip card.</p>","parent_name":"SCPReaderInputOptions"},"Enums/SCPReaderInputOptions.html#/c:@E@SCPReaderInputOptions@SCPReaderInputOptionTapCard":{"name":"SCPReaderInputOptionTapCard","abstract":"<p>Tap a contactless card.</p>","parent_name":"SCPReaderInputOptions"},"Protocols/SCPReaderDisplayDelegate.html#/c:objc(pl)SCPReaderDisplayDelegate(im)terminal:didRequestReaderInput:":{"name":"-terminal:didRequestReaderInput:","abstract":"<p>This method is called when the reader begins waiting for input. Your app","parent_name":"SCPReaderDisplayDelegate"},"Protocols/SCPReaderDisplayDelegate.html#/c:objc(pl)SCPReaderDisplayDelegate(im)terminal:didRequestReaderDisplayMessage:":{"name":"-terminal:didRequestReaderDisplayMessage:","abstract":"<p>This method is called to request that a prompt be displayed in your app.","parent_name":"SCPReaderDisplayDelegate"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)ipAddress":{"name":"ipAddress","abstract":"<p>The IP address of the reader. (Verifone P400 only.)</p>","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)locationId":{"name":"locationId","abstract":"<p>The location ID of the reader. (Verifone P400 only.)</p>","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)status":{"name":"status","abstract":"<p>The networking status of the reader: either <code>offline</code> or <code>online</code>. Note that","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)label":{"name":"label","abstract":"<p>A custom label that may be given to a reader for easier identification.","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)batteryLevel":{"name":"batteryLevel","abstract":"<p>The reader&rsquo;s battery level, represented as a boxed float in the range <code>[0, 1]</code>.","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)stripeId":{"name":"stripeId","abstract":"<p>The Stripe unique identifier for the reader.</p>","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)deviceType":{"name":"deviceType","abstract":"<p>The reader&rsquo;s device type.</p>","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)simulated":{"name":"simulated","abstract":"<p>True if this is a simulated reader.</p>","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)serialNumber":{"name":"serialNumber","abstract":"<p>The reader&rsquo;s serial number.</p>","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(py)deviceSoftwareVersion":{"name":"deviceSoftwareVersion","abstract":"<p>The reader&rsquo;s current device software version, or <code>nil</code> if this information is","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(im)init":{"name":"-init","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPReader"},"Classes/SCPReader.html#/c:objc(cs)SCPReader(cm)new":{"name":"+new","abstract":"<p>You cannot directly instantiate this class.</p>","parent_name":"SCPReader"},"Classes/SCPReader.html":{"name":"SCPReader","abstract":"<p>Information about a reader that has been discovered or connected to the SDK."},"Protocols/SCPReaderDisplayDelegate.html":{"name":"SCPReaderDisplayDelegate","abstract":"<p>You must implement this protocol to handle displaying events when connected"},"Enums/SCPReaderInputOptions.html":{"name":"SCPReaderInputOptions","abstract":"<p>This represents all of the input methods available to your user when the"},"Enums/SCPReaderDisplayMessage.html":{"name":"SCPReaderDisplayMessage","abstract":"<p>The display messages that a reader may request be displayed by your app.</p>"},"Enums/SCPReaderEvent.html":{"name":"SCPReaderEvent","abstract":"<p>The possible events from a connected reader.</p>"},"Enums/SCPReaderNetworkStatus.html":{"name":"SCPReaderNetworkStatus","abstract":"<p>The possible device types for a reader.</p>"},"Classes/SCPDiscoveryConfiguration.html":{"name":"SCPDiscoveryConfiguration","abstract":"<p>Configuration for discovering readers.</p>"},"Enums/SCPDeviceType.html":{"name":"SCPDeviceType","abstract":"<p>The possible device types for a reader.</p>"},"Enums/SCPDiscoveryMethod.html":{"name":"SCPDiscoveryMethod","abstract":"<p>The possible methods for discovering a reader.</p>"},"Protocols/SCPDiscoveryDelegate.html":{"name":"SCPDiscoveryDelegate","abstract":"<p>Implement this protocol to handle a continually updating list"},"Classes/SCPCart.html":{"name":"SCPCart","abstract":"<p>SCPCart contains information about what should display on the reader&rsquo;s cart."},"Classes/SCPCartLineItem.html":{"name":"SCPCartLineItem","abstract":"<p>Dictates what will be shown on the screen through setReaderDisplay."},"Protocols/SCPJSONDecodable.html#/c:objc(pl)SCPJSONDecodable(cm)decodedObjectFromJSON:":{"name":"+decodedObjectFromJSON:","abstract":"<p>Parses a JSON dictionary into an instance of the class. Returns nil if the","parent_name":"SCPJSONDecodable"},"Protocols/SCPJSONDecodable.html#/c:objc(pl)SCPJSONDecodable(py)originalJSON":{"name":"originalJSON","abstract":"<p>The raw JSON used to create the object. This may be useful for accessing","parent_name":"SCPJSONDecodable"},"Classes/SCPCancelable.html#/c:objc(cs)SCPCancelable(py)completed":{"name":"completed","abstract":"<p>Indicates whether the command has completed. After the command has completed,","parent_name":"SCPCancelable"},"Classes/SCPCancelable.html#/c:objc(cs)SCPCancelable(im)cancel:":{"name":"-cancel:","abstract":"<p>Attempts to cancel the action in progress. If the action could not be canceled,","parent_name":"SCPCancelable"},"Enums/SCPLogLevel.html#/c:@E@SCPLogLevel@SCPLogLevelNone":{"name":"SCPLogLevelNone","abstract":"<p>No logs will printed to the console.</p>","parent_name":"SCPLogLevel"},"Enums/SCPLogLevel.html#/c:@E@SCPLogLevel@SCPLogLevelVerbose":{"name":"SCPLogLevelVerbose","abstract":"<p>Verbose logs will be printed to the console.</p>","parent_name":"SCPLogLevel"},"Enums/SCPConnectionStatus.html#/c:@E@SCPConnectionStatus@SCPConnectionStatusNotConnected":{"name":"SCPConnectionStatusNotConnected","abstract":"<p>The SDK is not connected to a reader.</p>","parent_name":"SCPConnectionStatus"},"Enums/SCPConnectionStatus.html#/c:@E@SCPConnectionStatus@SCPConnectionStatusConnected":{"name":"SCPConnectionStatusConnected","abstract":"<p>The SDK is connected to a reader.</p>","parent_name":"SCPConnectionStatus"},"Enums/SCPConnectionStatus.html#/c:@E@SCPConnectionStatus@SCPConnectionStatusConnecting":{"name":"SCPConnectionStatusConnecting","abstract":"<p>The SDK is currently connecting to a reader.</p>","parent_name":"SCPConnectionStatus"},"Classes/SCPConnectionConfiguration.html#/c:objc(cs)SCPConnectionConfiguration(py)failIfInUse":{"name":"failIfInUse","abstract":"<p>If set to true, the connection will automatically error if the reader is already","parent_name":"SCPConnectionConfiguration"},"Classes/SCPConnectionConfiguration.html#/c:objc(cs)SCPConnectionConfiguration(py)allowCustomerCancel":{"name":"allowCustomerCancel","abstract":"<p>If set to true, the customer will be able to press the red X button on the","parent_name":"SCPConnectionConfiguration"},"Classes/SCPConnectionConfiguration.html#/c:objc(cs)SCPConnectionConfiguration(im)initWithFailIfInUse:allowCustomerCancel:":{"name":"-initWithFailIfInUse:allowCustomerCancel:","abstract":"<p>Initialize your connect options with all possible properties.</p>","parent_name":"SCPConnectionConfiguration"},"Classes/SCPConnectionConfiguration.html#/c:objc(cs)SCPConnectionConfiguration(im)initWithFailIfInUse:":{"name":"-initWithFailIfInUse:","abstract":"<p>Initalize your connect options with fail if in use.</p>","parent_name":"SCPConnectionConfiguration"},"Classes/SCPConnectionConfiguration.html#/c:objc(cs)SCPConnectionConfiguration(im)initWithAllowCustomerCancel:":{"name":"-initWithAllowCustomerCancel:","abstract":"<p>Initialize your connect options with allowCustomerCancel.</p>","parent_name":"SCPConnectionConfiguration"},"Protocols/SCPTerminalDelegate.html#/c:objc(pl)SCPTerminalDelegate(im)terminal:didReportUnexpectedReaderDisconnect:":{"name":"-terminal:didReportUnexpectedReaderDisconnect:","abstract":"<p>The reader disconnected unexpectedly (that is, without your app explicitly","parent_name":"SCPTerminalDelegate"},"Protocols/SCPTerminalDelegate.html#/c:objc(pl)SCPTerminalDelegate(im)terminal:didReportReaderEvent:info:":{"name":"-terminal:didReportReaderEvent:info:","abstract":"<p>The SDK reported an event from the reader (e.g. a card was inserted).</p>","parent_name":"SCPTerminalDelegate"},"Protocols/SCPTerminalDelegate.html#/c:objc(pl)SCPTerminalDelegate(im)terminalDidReportLowBatteryWarning:":{"name":"-terminalDidReportLowBatteryWarning:","abstract":"<p>This method is called when the SDK&rsquo;s currently connected reader has a low battery.</p>","parent_name":"SCPTerminalDelegate"},"Protocols/SCPTerminalDelegate.html#/c:objc(pl)SCPTerminalDelegate(im)terminal:didChangeConnectionStatus:":{"name":"-terminal:didChangeConnectionStatus:","abstract":"<p>The currently connected reader&rsquo;s <code>connectionStatus</code> changed.</p>","parent_name":"SCPTerminalDelegate"},"Protocols/SCPTerminalDelegate.html#/c:objc(pl)SCPTerminalDelegate(im)terminal:didChangePaymentStatus:":{"name":"-terminal:didChangePaymentStatus:","abstract":"<p>The currently connected reader&rsquo;s <code>paymentStatus</code> changed.</p>","parent_name":"SCPTerminalDelegate"},"Protocols/SCPConnectionTokenProvider.html#/c:objc(pl)SCPConnectionTokenProvider(im)fetchConnectionToken:":{"name":"-fetchConnectionToken:","abstract":"<p>Fetches a connection token from your backend server.</p>","parent_name":"SCPConnectionTokenProvider"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)setTokenProvider:":{"name":"+setTokenProvider:","abstract":"<p>Sets the token provider for the shared (singleton) <code>SCPTerminal</code> instance.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)hasTokenProvider":{"name":"+hasTokenProvider","abstract":"<p>Returns true if a token provider has been set, through <code>setTokenProvider:</code></p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)setLogListener:":{"name":"+setLogListener:","abstract":"<p>Sets a block to listen for logs from the shared Terminal instance (optional).</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cpy)shared":{"name":"shared","abstract":"<p>Returns the shared (singleton) Terminal instance.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(py)delegate":{"name":"delegate","abstract":"<p>The Terminal instance&rsquo;s delegate (optional).</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(py)connectedReader":{"name":"connectedReader","abstract":"<p>Information about the connected <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPReader.html\">SCPReader</a></code>, or nil if no reader is connected.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(py)connectionStatus":{"name":"connectionStatus","abstract":"<p>The Terminal instance&rsquo;s current connection status.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(py)logLevel":{"name":"logLevel","abstract":"<p>The log level for the SDK. The default value is <code>.none</code>.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(py)paymentStatus":{"name":"paymentStatus","abstract":"<p>The Terminal instance&rsquo;s current payment status.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)clearCachedCredentials":{"name":"-clearCachedCredentials","abstract":"<p>Clears the current connection token, saved reader sessions, and any other","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)discoverReaders:delegate:completion:":{"name":"-discoverReaders:delegate:completion:","abstract":"<p>Begins discovering readers matching the given configuration.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)connectReader:connectionConfig:completion:":{"name":"-connectReader:connectionConfig:completion:","abstract":"<p>Attempts to connect to the given reader with a given connection configuration.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)connectReader:completion:":{"name":"-connectReader:completion:","abstract":"<p>Convenience method for connecting to a reader without connection configuration.","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)disconnectReader:":{"name":"-disconnectReader:","abstract":"<p>Attempts to disconnect from the currently connected reader.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)createPaymentIntent:completion:":{"name":"-createPaymentIntent:completion:","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPPaymentIntent.html\">SCPPaymentIntent</a></code> with the given parameters.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)retrievePaymentIntent:completion:":{"name":"-retrievePaymentIntent:completion:","abstract":"<p>Retrieves a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPPaymentIntent.html\">SCPPaymentIntent</a></code> with a client secret.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)collectPaymentMethod:delegate:completion:":{"name":"-collectPaymentMethod:delegate:completion:","abstract":"<p>Collects a payment method for the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPPaymentIntent.html\">SCPPaymentIntent</a></code>.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)processPayment:completion:":{"name":"-processPayment:completion:","abstract":"<p>Processes a payment after collecting a payment method succeeds.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)cancelPaymentIntent:completion:":{"name":"-cancelPaymentIntent:completion:","abstract":"<p>Cancels an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPPaymentIntent.html\">SCPPaymentIntent</a></code>.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)readReusableCard:delegate:completion:":{"name":"-readReusableCard:delegate:completion:","abstract":"<p>Reads a card with the given parameters and returns a PaymentMethod.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)collectRefundPaymentMethod:completion:":{"name":"-collectRefundPaymentMethod:completion:","abstract":"<p>Initiates an in-person refund with a given set of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SCPRefundParameters.html\">SCPRefundParameters</a></code> by","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)processRefund:":{"name":"-processRefund:","abstract":"<p>Processes an in-person refund after the refund payment method has been collected.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)checkForUpdate:":{"name":"-checkForUpdate:","abstract":"<p>Checks for a reader software update, and returns an update object if an update","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)clearReaderDisplay:":{"name":"-clearReaderDisplay:","abstract":"<p>Clears the reader display and resets it to the splash screen.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)setReaderDisplay:completion:":{"name":"-setReaderDisplay:completion:","abstract":"<p>Updates the reader display with cart information.","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)installUpdate:delegate:completion:":{"name":"-installUpdate:delegate:completion:","abstract":"<p>Installs the provided update, and calls the completion block when the","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)stringFromReaderInputOptions:":{"name":"+stringFromReaderInputOptions:","abstract":"<p>Returns an unlocalized string for the given reader input options, e.g.","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)stringFromReaderDisplayMessage:":{"name":"+stringFromReaderDisplayMessage:","abstract":"<p>Returns an unlocalized string for the given reader display message, e.g.","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)stringFromReaderEvent:":{"name":"+stringFromReaderEvent:","abstract":"<p>Returns an unlocalized string for the given reader event, e.g.","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)stringFromConnectionStatus:":{"name":"+stringFromConnectionStatus:","abstract":"<p>Returns an unlocalized string for the given connection status, e.g.","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)stringFromPaymentStatus:":{"name":"+stringFromPaymentStatus:","abstract":"<p>Returns an unlocalized string for the given payment status, e.g.","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)stringFromDeviceType:":{"name":"+stringFromDeviceType:","abstract":"<p>Returns an unlocalized string for the given device type.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)stringFromDiscoveryMethod:":{"name":"+stringFromDiscoveryMethod:","abstract":"<p>Returns an unlocalized string for the given discovery method.</p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)init":{"name":"-init","abstract":"<p>Use <code>initWithConfiguration:tokenProvider:delegate:</code></p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(cm)new":{"name":"+new","abstract":"<p>Use <code>initWithConfiguration:tokenProvider:delegate:</code></p>","parent_name":"SCPTerminal"},"Classes/SCPTerminal.html":{"name":"SCPTerminal","abstract":"<p>The <code>SCPTerminal</code> object that is made available by the Stripe Terminal SDK exposes"},"Protocols/SCPConnectionTokenProvider.html":{"name":"SCPConnectionTokenProvider","abstract":"<p>Before integrating the SDK, you should create an endpoint on your backend"},"Protocols/SCPTerminalDelegate.html":{"name":"SCPTerminalDelegate","abstract":"<p>Implement this protocol to handle updates from the Stripe Terminal iOS SDK.</p>"},"Classes/SCPConnectionConfiguration.html":{"name":"SCPConnectionConfiguration","abstract":"<p>This class lets you set options that define reader behavior throughout a given"},"Enums/SCPConnectionStatus.html":{"name":"SCPConnectionStatus","abstract":"<p>The possible reader connection statuses for the SDK.</p>"},"Enums/SCPLogLevel.html":{"name":"SCPLogLevel","abstract":"<p>The various log levels for the SDK.</p>"},"Classes/SCPCancelable.html":{"name":"SCPCancelable","abstract":"<p>An object representing an action that can be canceled.</p>"},"Protocols/SCPJSONDecodable.html":{"name":"SCPJSONDecodable","abstract":"<p>Objects conforming to this protocol can be instantiated by decoding a JSON"},"Terminal.html":{"name":"Terminal"},"Reader.html":{"name":"Reader"},"Payment.html":{"name":"Payment"},"Reader%20Updates.html":{"name":"Reader Updates"},"Errors.html":{"name":"Errors"},"Blocks.html":{"name":"Blocks"},"Other%20Constants.html":{"name":"Other Constants","abstract":"<p>The following constants are available globally.</p>"}}